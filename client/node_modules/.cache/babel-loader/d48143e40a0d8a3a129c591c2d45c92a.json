{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vebjo\\\\Documents\\\\GitHub\\\\Simplify-Website\\\\client\\\\src\\\\pages\\\\AppListPage\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport './style.css';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport { ListApps } from './list';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function AppListPage(props) {\n  _s();\n\n  const [apps, setApps] = React.useState([]);\n\n  function getApplications() {\n    return axios.get('http://localhost:5001/api/applist');\n    /*.then(data => {\r\n    for (let i in data.data) {\r\n    console.log(data.data[i].appType)\r\n    }\r\n    })*/\n  }\n\n  const clickHandler = () => {\n    console.log(apps.discordId);\n  };\n\n  React.useEffect(() => {\n    getApplications().then(({\n      data\n    }) => {\n      setApps(data);\n      apps.map(app => {\n        console.log(app.discordId);\n      });\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"body\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      onClick: clickHandler,\n      children: \"Test\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"application-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"app-tags\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"name-tag\",\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"type-tag\",\n          children: \"Application Type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"date-tag\",\n          children: \"Applied on\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this)]\n      }, \"app-list\", true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), apps.map(app => {\n        return /*#__PURE__*/_jsxDEV(Link, {\n          to: ``,\n          children: /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"application-bar\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"name\",\n              children: [app.user, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"type\",\n              children: [app.appType, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"date\",\n              children: app.date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 33\n            }, this)]\n          }, app.applicationId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 25\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AppListPage, \"+5PbsyhwWOXJscV4yCnTtQYHSdM=\");\n\n_c = AppListPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"AppListPage\");","map":{"version":3,"sources":["C:/Users/vebjo/Documents/GitHub/Simplify-Website/client/src/pages/AppListPage/index.jsx"],"names":["React","Link","axios","ListApps","AppListPage","props","apps","setApps","useState","getApplications","get","clickHandler","console","log","discordId","useEffect","then","data","map","app","catch","err","user","appType","date","applicationId"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,aAAP;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,QAAzB;;AAEA,OAAO,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAAA;;AAC/B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,KAAK,CAACQ,QAAN,CAAe,EAAf,CAAxB;;AAEA,WAASC,eAAT,GAA2B;AACvB,WAAOP,KAAK,CAACQ,GAAN,CAAU,mCAAV,CAAP;AAAqD;AAC7D;AACA;AACA;AACA;AACK;;AAED,QAAMC,YAAY,GAAG,MAAM;AACvBC,IAAAA,OAAO,CAACC,GAAR,CAAYP,IAAI,CAACQ,SAAjB;AACH,GAFD;;AAIAd,EAAAA,KAAK,CAACe,SAAN,CAAgB,MAAM;AAClBN,IAAAA,eAAe,GACVO,IADL,CACU,CAAC;AAAEC,MAAAA;AAAF,KAAD,KAAc;AAChBV,MAAAA,OAAO,CAACU,IAAD,CAAP;AACAX,MAAAA,IAAI,CAACY,GAAL,CAASC,GAAG,IAAI;AACZP,QAAAA,OAAO,CAACC,GAAR,CAAYM,GAAG,CAACL,SAAhB;AACH,OAFD;AAGH,KANL,EAMOM,KANP,CAMaC,GAAG,IAAI;AACZT,MAAAA,OAAO,CAACC,GAAR,CAAYQ,GAAZ;AACH,KARL;AASH,GAVD,EAUG,EAVH;AAYA,sBACI;AAAA,4BACI;AAAG,MAAA,OAAO,EAAEV,YAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,8BACI;AAAmB,QAAA,SAAS,EAAC,UAA7B;AAAA,gCACI;AAAM,UAAA,SAAS,EAAC,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAM,UAAA,SAAS,EAAC,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAM,UAAA,SAAS,EAAC,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA,SAAQ,UAAR;AAAA;AAAA;AAAA;AAAA,cADJ,EAMKL,IAAI,CAACY,GAAL,CAASC,GAAG,IAAI;AACb,4BACI,QAAC,IAAD;AAAM,UAAA,EAAE,EAAG,EAAX;AAAA,iCACI;AAA4B,YAAA,SAAS,EAAC,iBAAtC;AAAA,oCACI;AAAM,cAAA,SAAS,EAAC,MAAhB;AAAA,yBAAwBA,GAAG,CAACG,IAA5B;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAM,cAAA,SAAS,EAAC,MAAhB;AAAA,yBAAwBH,GAAG,CAACI,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAGI;AAAM,cAAA,SAAS,EAAC,MAAhB;AAAA,wBAAwBJ,GAAG,CAACK;AAA5B;AAAA;AAAA;AAAA;AAAA,oBAHJ;AAAA,aAASL,GAAG,CAACM,aAAb;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ;AASH,OAVA,CANL;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAuBH;;GAlDerB,W;;KAAAA,W","sourcesContent":["import React from \"react\";\r\nimport './style.css';\r\nimport { Link } from 'react-router-dom'\r\nimport axios from 'axios';\r\nimport { ListApps } from './list'\r\n\r\nexport function AppListPage(props) {\r\n    const [apps, setApps] = React.useState([])\r\n\r\n    function getApplications() {\r\n        return axios.get('http://localhost:5001/api/applist')/*.then(data => {\r\n           for (let i in data.data) {\r\n            console.log(data.data[i].appType)\r\n           }\r\n        })*/\r\n    }\r\n\r\n    const clickHandler = () => {\r\n        console.log(apps.discordId)\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        getApplications()\r\n            .then(({ data }) => {\r\n                setApps(data)\r\n                apps.map(app => {\r\n                    console.log(app.discordId)\r\n                })\r\n            }).catch(err => {\r\n                console.log(err)\r\n            })\r\n    }, [])\r\n\r\n    return (\r\n        <body>\r\n            <p onClick={clickHandler}>Test</p>\r\n            <div className=\"application-list\">\r\n                <li key=\"app-list\" className=\"app-tags\">\r\n                    <span className=\"name-tag\">Name</span>\r\n                    <span className=\"type-tag\">Application Type</span>\r\n                    <span className=\"date-tag\">Applied on</span>\r\n                </li>\r\n                {apps.map(app => {\r\n                    return (\r\n                        <Link to={``}>\r\n                            <li key={app.applicationId} className=\"application-bar\">\r\n                                <span className=\"name\">{app.user} </span>\r\n                                <span className=\"type\">{app.appType} </span>\r\n                                <span className=\"date\">{app.date}</span>\r\n                            </li>\r\n                        </Link>\r\n                    )\r\n                })}\r\n            </div>\r\n        </body>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}