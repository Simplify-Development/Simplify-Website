{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vebjo\\\\Documents\\\\GitHub\\\\Simplify-Website\\\\client\\\\src\\\\pages\\\\AppListPage\\\\list.js\",\n    _s = $RefreshSig$();\n\nimport { Divider } from \"@material-ui/core\";\nimport React from \"react\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function ListApplications({\n  props\n}) {\n  _s();\n\n  const [apps, setApps] = React.useState(null);\n  axios.get('http://localhost:5001/api/applist').then(data => {\n    setApps(data.data);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: apps\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ListApplications, \"ujaajl83BUhdOM4s5cIwsQsqscs=\");\n\n_c = ListApplications;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListApplications\");","map":{"version":3,"sources":["C:/Users/vebjo/Documents/GitHub/Simplify-Website/client/src/pages/AppListPage/list.js"],"names":["Divider","React","axios","ListApplications","props","apps","setApps","useState","get","then","data"],"mappings":";;;AAAA,SAASA,OAAT,QAAwB,mBAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAIA,OAAO,SAASC,gBAAT,CAA0B;AAC7BC,EAAAA;AAD6B,CAA1B,EAEJ;AAAA;;AACC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,KAAK,CAACM,QAAN,CAAe,IAAf,CAAxB;AAEAL,EAAAA,KAAK,CAACM,GAAN,CAAU,mCAAV,EAA+CC,IAA/C,CAAoDC,IAAI,IAAI;AACxDJ,IAAAA,OAAO,CAACI,IAAI,CAACA,IAAN,CAAP;AACH,GAFD;AAIA,sBACI;AAAA,2BACI;AAAA,gBAAIL;AAAJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;GAdeF,gB;;KAAAA,gB","sourcesContent":["import { Divider } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport axios from 'axios';\r\n\r\n\r\n\r\nexport function ListApplications({\r\n    props\r\n}) {\r\n    const [apps, setApps] = React.useState(null)\r\n\r\n    axios.get('http://localhost:5001/api/applist').then(data => {\r\n        setApps(data.data)\r\n    })\r\n\r\n    return (\r\n        <div>\r\n            <p>{apps}</p>\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}